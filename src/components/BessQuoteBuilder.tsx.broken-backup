import React, { useState } from 'react';
import AdvancedConfigModal from './modals/AdvancedConfigModal';
import { useAdvancedConfig } from '../hooks/useAdvancedConfig';
import { apiUrl } from '../utils/api';

export default function BessQuoteBuilder() {
  // Advanced Input Modal/Panel State

  // Advanced Configuration Hook
  const {
    showAdvancedModal,
    advancedConfig,
    setAdvancedConfig,
    openAdvancedModal,
    closeAdvancedModal,
    saveAdvancedConfig
  } = useAdvancedConfig();
  const [showSmartWizard, setShowSmartWizard] = useState(false);

  // Save prompt state
  const [showSavePrompt, setShowSavePrompt] = useState(false);

  const [wizardData, setWizardData] = useState({
    primaryApplication: '',
    budgetRange: '',
    equipmentNeeded: '',
    powerMW: '',
    voltage: '',
    gridMode: '',
    country: '',
    projectReference: '',
  });

  const [quoteInputs, setQuoteInputs] = useState({
    primaryApplication: '',
    budgetRange: '',
    equipmentNeeded: '',
    powerMW: '',
    voltage: '',
    gridMode: '',
    country: '',
    projectReference: '',
  });

  function generateSmartConfiguration() {
    setQuoteInputs({ ...wizardData });
    alert('Smart configuration applied to quote!');
    setShowSmartWizard(false);
  }

  function calculateQuote(inputs: {
    primaryApplication: string;
    budgetRange: string;
    equipmentNeeded: string;
    powerMW: string;
    voltage: string;
    gridMode: string;
    country: string;
    projectReference: string;
  }) {
    return {
      ...inputs,
      totalCost: inputs.powerMW ? Number(inputs.powerMW) * 1000000 : 0,
    };
  }

  const [quoteOutputs, setQuoteOutputs] = useState(calculateQuote(quoteInputs));

  React.useEffect(() => {
    setQuoteOutputs(calculateQuote(quoteInputs));
  }, [quoteInputs]);

  // Local save (so users don't lose work before auth)
  function saveQuoteLocally() {
    try {
      const existing = JSON.parse(localStorage.getItem('merlin_local_quotes') || '[]');
      const snapshot = {
        id: Date.now(),
        createdAt: new Date().toISOString(),
        inputs: quoteInputs,
        outputs: quoteOutputs,
      };
      const next = [snapshot, ...existing].slice(0, 50);
      localStorage.setItem('merlin_local_quotes', JSON.stringify(next));
      return snapshot;
    } catch {
      return null;
    }
  }

  function handleSaveProject() {
    saveQuoteLocally();
    setShowSavePrompt(true);
  }

  async function exportToWord() {
    const payload = {
      inputs: quoteInputs,
      outputs: quoteOutputs,
    };
    try {
      const response = await fetch(apiUrl('/api/export/word'), {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload),
      });
      if (response.ok) {
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'Merlin_Quote.docx';
        document.body.appendChild(a);
        a.click();
        a.remove();
        window.URL.revokeObjectURL(url);
        alert('Exported to Word!');
      } else {
        alert('Export failed.');
      }
    } catch (err) {
      alert('Export error: ' + err);
    }
  }

  return (
    <>
      <div className="flex gap-4 p-4">
        <button
          className="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-2 rounded-lg shadow font-semibold"
          onClick={() => setShowSmartWizard(true)}
        >
          Open Smart Wizard
        </button>
        <button
          className="bg-gradient-to-r from-purple-500 to-blue-500 text-white px-6 py-2 rounded-lg shadow font-semibold"
          onClick={() => openAdvancedModal()}
        >
          Advanced Quote Options
        </button>
      </div>

      {/* Static guidance message (no animation) */}
      <div className="px-4 !animate-none" style={{ animation: 'none' }}>
        <div
          className="mt-2 !animate-none rounded-lg border border-indigo-200 bg-indigo-50 text-indigo-800 p-3 text-sm"
          style={{ animation: 'none', transition: 'none' }}
        >
          <span className="mr-2">ðŸª„</span>
          <span>Scroll down to complete your quote. Review assumptions and see your results below.</span>
      </div>

      {/* Show current quote inputs and outputs */}
      <div className="p-4 bg-blue-50 rounded-xl shadow mb-4">
        <h3 className="font-bold text-blue-700 mb-2">Current Quote Inputs</h3>
        <div className="grid grid-cols-2 gap-2 text-sm">
          <div><strong>Project Reference:</strong> {quoteInputs.projectReference}</div>
          <div><strong>Primary Application:</strong> {quoteInputs.primaryApplication}</div>
          <div><strong>Budget Range:</strong> {quoteInputs.budgetRange}</div>
          <div><strong>Equipment Needed:</strong> {quoteInputs.equipmentNeeded}</div>
          <div><strong>Power (MW):</strong> {quoteInputs.powerMW}</div>
          <div><strong>Voltage:</strong> {quoteInputs.voltage}</div>
          <div><strong>Grid Mode:</strong> {quoteInputs.gridMode}</div>
          <div><strong>Country:</strong> {quoteInputs.country}</div>

        <h3 className="font-bold text-purple-700 mt-6 mb-2">Calculated Outputs</h3>
        <div className="grid grid-cols-2 gap-2 text-sm">
          <div><strong>Total Cost:</strong> ${quoteOutputs.totalCost.toLocaleString()}</div>

        <div className="mt-6 flex justify-end gap-3">
          <button
            className="bg-gradient-to-r from-emerald-600 to-green-600 text-white px-6 py-2 rounded-lg shadow font-semibold hover:from-emerald-700 hover:to-green-700 transition"
            onClick={handleSaveProject}
          >
            Save Project
          </button>
          <button
            className="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-2 rounded-lg shadow font-semibold"
            onClick={exportToWord}
          >
            Export to Word
          </button>
      </div>

      {/* Smart Wizard Modal */}
      {showSmartWizard && (
        <div className="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50">
          <div className="bg-white rounded-xl shadow-2xl max-w-lg w-full p-8 border border-purple-200 relative">
            <button
              className="absolute top-4 right-4 text-gray-500 hover:text-gray-700 text-2xl font-bold"
              onClick={() => setShowSmartWizard(false)}
              aria-label="Close Smart Wizard"
            >
              Ã—
            </button>
            <h2 className="text-2xl font-bold text-purple-700 mb-4">Smart Wizard</h2>
            <div className="space-y-4">
              <label className="flex flex-col text-sm font-semibold">Project Reference
                <input className="border p-2 rounded font-normal mt-1" type="text" value={wizardData.projectReference} onChange={e => setWizardData({ ...wizardData, projectReference: e.target.value })} placeholder="e.g. Customer PO, Site Name" />
              </label>
              <label className="flex flex-col text-sm font-semibold">Primary Application
                <input className="border p-2 rounded font-normal mt-1" type="text" value={wizardData.primaryApplication} onChange={e => setWizardData({ ...wizardData, primaryApplication: e.target.value })} placeholder="e.g. BESS, Solar, Wind" />
              </label>
              <label className="flex flex-col text-sm font-semibold">Budget Range
                <input className="border p-2 rounded font-normal mt-1" type="text" value={wizardData.budgetRange} onChange={e => setWizardData({ ...wizardData, budgetRange: e.target.value })} placeholder="$1M - $10M" />
              </label>
              <label className="flex flex-col text-sm font-semibold">Equipment Needed
                <input className="border p-2 rounded font-normal mt-1" type="text" value={wizardData.equipmentNeeded} onChange={e => setWizardData({ ...wizardData, equipmentNeeded: e.target.value })} placeholder="PCS, Battery, Solar, Wind" />
              </label>
              <label className="flex flex-col text-sm font-semibold">Power (MW)
                <input className="border p-2 rounded font-normal mt-1" type="text" value={wizardData.powerMW} onChange={e => setWizardData({ ...wizardData, powerMW: e.target.value })} placeholder="e.g. 5" />
              </label>
              <label className="flex flex-col text-sm font-semibold">Voltage
                <select className="border p-2 rounded font-normal mt-1" value={wizardData.voltage} onChange={e => setWizardData({ ...wizardData, voltage: e.target.value })}>
                  <option value="">Select</option>
                  <option value="800V">800V</option>
                  <option value="400V">400V</option>
                  <option value="200V">200V</option>
                </select>
              </label>
              <label className="flex flex-col text-sm font-semibold">Grid Mode
                <select className="border p-2 rounded font-normal mt-1" value={wizardData.gridMode} onChange={e => setWizardData({ ...wizardData, gridMode: e.target.value })}>
                  <option value="">Select</option>
                  <option value="on-grid">On-grid</option>
                  <option value="off-grid">Off-grid</option>
                  <option value="hybrid">Hybrid</option>
                </select>
              </label>
              <label className="flex flex-col text-sm font-semibold">Country
                <input className="border p-2 rounded font-normal mt-1" type="text" value={wizardData.country} onChange={e => setWizardData({ ...wizardData, country: e.target.value })} placeholder="e.g. USA, Canada" />
              </label>
            <div className="flex justify-end mt-6">
              <button
                className="bg-gradient-to-r from-purple-500 to-blue-600 text-white px-6 py-2 rounded-lg shadow font-semibold"
                onClick={generateSmartConfiguration}
              >
                Generate Smart Configuration
      {/* Advanced Configuration Modal */}
      {showAdvancedModal && (
        <AdvancedConfigModal
          config={advancedConfig}
          setConfig={setAdvancedConfig}
          onClose={closeAdvancedModal}
          onSave={saveAdvancedConfig}
        />

      {/* Professional Save Prompt */}
      {showSavePrompt && (
        <div
          className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"
          role="dialog"
          aria-modal="true"
          aria-label="Save Your Quote"
        >
          <div className="bg-white rounded-xl shadow-2xl max-w-lg w-full border border-gray-100 overflow-hidden">
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 p-6 border-b border-gray-100">
              <div className="text-center">
                <div className="w-16 h-16 mx-auto mb-4 bg-blue-100 rounded-full flex items-center justify-center">
                  <span className="text-3xl">ðŸ’¾</span>
                </div>
                <h2 className="text-2xl font-bold text-gray-800 mb-2">Save Your Quote</h2>
                <p className="text-gray-600">
                  Create an account or log in to save this quote to your Portfolio.
                </p>
              </div>

            <div className="p-6">
              <div className="bg-gradient-to-br from-blue-50 to-purple-50 p-5 rounded-xl border border-blue-100 mb-6 text-sm text-gray-700">
                <ul className="space-y-2">
                  <li className="flex items-center">
                    <span className="mr-2">âœ“</span> Save and manage multiple quotes
                  </li>
                  <li className="flex items-center">
                    <span className="mr-2">âœ“</span> Access from any device
                  </li>
                  <li className="flex items-center">
                    <span className="mr-2">âœ“</span> Export and share professionally
                  </li>
                </ul>
              </div>

              <div className="space-y-3">
                <a
                  href="/signup"
                  className="w-full block text-center bg-gradient-to-r from-green-600 to-emerald-600 text-white px-6 py-3 rounded-xl font-semibold hover:from-green-700 hover:to-emerald-700 transition"
                >
                  Join Now - Create Free Account
                </a>
                <a
                  href="/login"
                  className="w-full block text-center bg-gradient-to-r from-blue-600 to-indigo-600 text-white px-6 py-3 rounded-xl font-semibold hover:from-blue-700 hover:to-indigo-700 transition"
                >
                  Log In - Existing Account
                </a>
                <button
                  onClick={() => setShowSavePrompt(false)}
                  className="w-full border-2 border-gray-200 text-gray-600 px-6 py-3 rounded-xl hover:bg-gray-50 hover:border-gray-300 transition font-medium"
                >
                  Continue without account
                </button>
              </div>

              <p className="text-xs text-gray-500 text-center mt-4">
                Tip: Your quote has been saved locally on this device.
              </p>
    </>
  );
}